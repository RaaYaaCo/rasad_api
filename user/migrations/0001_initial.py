# Generated by Django 4.2.6 on 2023-10-27 13:29

from django.conf import settings
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.models
import user.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(db_index=True, max_length=11, unique=True, validators=[user.validators.check_phone], verbose_name='phone number')),
                ('code_melli', models.CharField(db_index=True, max_length=10, unique=True, validators=[user.validators.isnumeric], verbose_name='code melli')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', user.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=300, verbose_name='organization name')),
                ('code', models.CharField(max_length=30, unique=True, verbose_name='Organization code')),
                ('description', models.TextField(verbose_name='description')),
                ('address', models.TextField(verbose_name='Organization address')),
                ('location', django.contrib.gis.db.models.fields.GeometryField(db_index=True, geography=True, srid=4326, verbose_name='Location')),
                ('tel', models.CharField(blank=True, max_length=11, null=True, validators=[user.validators.isnumeric, user.validators.check_tel_number], verbose_name='tel number')),
                ('is_active', models.BooleanField(verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='OrgType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=300, unique=True, verbose_name='organization type title')),
            ],
            options={
                'verbose_name': 'organization type',
                'verbose_name_plural': 'organizations types',
            },
        ),
        migrations.CreateModel(
            name='UserGroupOrganization',
            fields=[
                ('ugo_code', models.IntegerField(blank=True, primary_key=True, serialize=False, unique=True, verbose_name='code')),
                ('is_active', models.BooleanField(verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('g_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='auth.group', verbose_name='group')),
                ('o_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user.organization', verbose_name='organization')),
                ('u_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user group organization',
                'verbose_name_plural': 'user group organization',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='o_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='user.orgtype', verbose_name='organization type'),
        ),
    ]
